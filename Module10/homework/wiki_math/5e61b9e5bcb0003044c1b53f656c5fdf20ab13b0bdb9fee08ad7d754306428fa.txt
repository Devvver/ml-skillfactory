Алгоритм пчелиной колонии Алгоритм пчелиной колонии (алгоритм оптимизации подражанием пчелиной колонии, англ. artificial bee colony optimization, ABC) — один из полиномиальных эвристических алгоритмов для решения оптимизационных задач в области информатики и исследования операций. Относится к категории стохастических бионических алгоритмов, основан на имитации поведения колонии медоносных пчел при сборе нектара в природе. Предложен Д. Карабога в 2005 г[1].  Содержание  1 Стратегия сбора меда медоносными пчелами в природе 2 Стратегия оптимизации целевой функции 3 См. также 4 Примечания   Стратегия сбора меда медоносными пчелами в природе[править | править код]  Алгоритм пчелиной колонии как результат наблюдения за поведением колонии медоносных пчел при сборе нектара в природе Основной целью работы пчелиной колонии в природе является разведка пространства вокруг улья с целью поиска нектара с последующим его сбором. Для этого в составе колонии существуют различные типы пчел: пчелы-разведчики и рабочие пчелы-фуражиры (кроме них, в колонии существуют трутни и матка, не участвующие в процессе сбора нектара). Разведчики ведут исследование окружающего улей пространства и сообщают информацию о перспективных местах, в которых было обнаружено наибольшее количество нектара (для обмена информацией в улье существует специальный механизм, именуемый танцем пчелы). Далее по наиболее перспективным направлениям вылетают рабочие пчёлы, которые занимаются сбором нектара, попутно проводя уточнение информации разведчиков о количестве нектара в некоторой окрестности от указанной разведчиком области. Работа указанных типов пчел в улье обеспечивает эффективную разведку окружающего пространства и сбор нектара.  Стратегия оптимизации целевой функции[править | править код]  Схематичное изображение стратегии разведки двумерного пространства (жирные линии — вылеты разведчиков, тонкие линии — уточнение решений рабочими пчелами) Алгоритм пчелиной колонии может применяться для решения дискретных (комбинаторных) и непрерывных (англ.) задач глобальной оптимизации[2][3] и имеет достаточную степень схожести с мультистарт-алгоритмами (англ.). Обычно он включает в себя начальную разведку и последующую работу пчел улья. При инициализации (начальной разведке) производится выполнение разведки пространства признаков с целью определения     K   {\displaystyle K}   его наиболее перспективных точек с наилучшими значениями целевой функции     f ( X ) = f (  x  1   ,  x  2   , . . . ,  x  n   )   {\displaystyle f(X)=f(x_{1},x_{2},...,x_{n})}   (в простейшем случае с использованием метода случайного перебора (англ.)), которые запоминаются в улье. После этого в окрестностях выбранных точек производится локальная разведка в пределах заданного радиуса разведки     R   {\displaystyle R}   с целью попытки уточнения решения (улучшения рекорда), при этом при достижении улучшения в улье сохраняется обновленное значение рекорда      f  ∗     {\displaystyle f^{*}}   и соответствующий ему вектор параметров целевой функции      X  ∗     {\displaystyle X^{*}}  . Комбинируя работу пчел-разведчиков и рабочих пчел на протяжении заданного числа итераций     C   {\displaystyle C}   алгоритм обеспечивает постепенное улучшение запоминаемой выборки       R   = [  X  1   ,  X  2   , . . . ,  X  K   ]   {\displaystyle {\mathfrak {R}}=[X_{1},X_{2},...,X_{K}]}   из     K   {\displaystyle K}   решений. По завершении его работы из указанного множества решений выбирается наилучшее, что является результатом работы алгоритма.  См. также[править | править код] Муравьиный алгоритм Метод роя частиц   Примечания[править | править код]   ↑ D. Dervis Karaboga, An Idea Based On Honey Bee Swarm for Numerical Optimization, Technical Report-TR06, Erciyes University, Engineering Faculty, Computer Engineering Department 2005.  ↑ Pham, D.T., Castellani, M. (2009), The Bees Algorithm – Modelling Foraging Behaviour to Solve Continuous Optimisation Problems. Proc. ImechE, Part C, 223(12), 2919-2938.  ↑ Pham, D.T. and Castellani, M. (2013), Benchmarking and Comparison of Nature-Inspired Population-Based Continuous Optimisation Algorithms, Soft Computing, 1-33.   Методы оптимизацииОдномерные Метод золотого сечения Дихотомия Метод парабол Перебор по сетке Метод равномерного блочного поиска Метод Фибоначчи Троичный поиск Метод Пиявского Метод Стронгина Прямые методы Метод Гаусса Метод Нелдера — Мида  Метод Хука — Дживса Метод конфигураций Метод Розенброка Первого порядка Градиентный спуск Метод Зойтендейка Покоординатный спуск Метод сопряжённых градиентов Квазиньютоновские методы Алгоритм Левенберга — Марквардта Второго порядка Метод Ньютона Метод Ньютона — Рафсона Алгоритм Бройдена — Флетчера — Гольдфарба — Шанно (BFGS) Стохастические Метод Монте-Карло Имитация отжига Эволюционные алгоритмы Дифференциальная эволюция Муравьиный алгоритм Метод роя частиц Алгоритм пчелиной колонии Метод случайных блужданий Методы линейногопрограммирования Симплекс-метод Алгоритм Гомори Метод эллипсоидов Метод потенциалов Методы нелинейногопрограммирования Последовательное квадратичное программирование     